name: donwload_models
env:
  HF_TOKEN: ${{secrets.HUGGINGFACE_TOKEN}}
  REPO_NAME: LLaMAX
  MODEL_NAME: LLaMAX3-8B-Alpaca
  # DOCKER_IMAGE: nvcr.io/nvidia/tritonserver:24.12-vllm-python-py3
  TAG: 24.12-vllm
  # DOCKER_IMAGE: hieupth/tritonserver:${{env.TAG}}


on:
  push:
    branches:
      - execute
jobs:
  Prepare_docker_image_for_triton_inference_vllm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: download_weights
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      
      - name: Set DOCKER_IMAGE environment variable
        run: |
          echo "DOCKER_IMAGE=hieupth/tritonserver:${{ env.TAG }}" >> $GITHUB_ENV

      - name: Set up Dockerfile
        run: |
          python write_dockerfile.py
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: To lower case
        run: |
          echo "MODEL_NAME_LOWER=$(echo '${{ env.MODEL_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: true
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Free up disk sapce
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Clean up unused packages
        run: |
          sudo apt-get clean
          docker system prune -af

      - name: Build and prune Docker
        run: |
          docker build --rm -t my-image .
          docker system prune -af
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.docker_username }}/${{ env.MODEL_NAME_LOWER }}:${{ env.TAG }}

      # - name: Display Python version
      #   # uses: actions/setup-python@v4
      #   # with:
      #   #   python-version: 3.11
      #   run: |
      #     python --version
      # - name: Install dependencies
      #   # uses: actions/setup-python@v4
      #   # with:
      #   #   python-version: 3.11
      #   run: |
      #     python -m pip install huggingface_hub
      
      # - name: Download model
      #   run: |
      #     python download.py
      
      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: 3.11

      # - name: Setup Dockerfile
      #   run: |
      #     python write_dockerfile.py

      # - name: Free Disk Space (Ubuntu)
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     # this might remove tools that are actually needed,
      #     # if set to "true" but frees about 6 GB
      #     tool-cache: true
      #     # all of these default to true, but feel free to set to
      #     # "false" if necessary for your workflow
      #     android: true
      #     dotnet: true
      #     haskell: true
      #     large-packages: true
      #     docker-images: true
      #     swap-storage: true

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.docker_username }}
      #     password: ${{ secrets.docker_password }}

      # - name: To lower case
      #   run: |
      #     echo "MODEL_NAME_LOWER=$(echo '${{ env.MODEL_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # - name: Remove unnecessary files
      #   run: |
      #     sudo rm -rf /usr/share/dotnet
      #     sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      # - name: Build Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: Dockerfile
      #     push: true
      #     platforms: linux/amd64
      #     tags: ${{ secrets.docker_username }}/${{ env.MODEL_NAME_LOWER }}:latest
